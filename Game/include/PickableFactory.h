#ifndef PICKABLEFACTORY_H
#define PICKABLEFACTORY_H

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include <Pickable.h>
#include <SFML/System/Time.hpp>
#include <SFML/System/Vector2.hpp>

////////////////////////////////////////////////////////////
/// \brief Factory to create pickable objects
///
////////////////////////////////////////////////////////////
class PickableFactory
{
    public:
        ////////////////////////////////////////////////////////////
        /// \brief Constructor
        ///
        /// \param frequency Drop frequency
        ///
        /// Create the pickable factory
        ///
        ////////////////////////////////////////////////////////////
        PickableFactory(float frequency);

        ////////////////////////////////////////////////////////////
        /// \brief Destructor
        ///
        ////////////////////////////////////////////////////////////
        virtual ~PickableFactory();

        ////////////////////////////////////////////////////////////
        /// \brief Getter of frequency
        ///
        /// \return Drop frequency
        ///
        ////////////////////////////////////////////////////////////
        sf::Time getDropFrequency(){ return drop_frequency; }

        ////////////////////////////////////////////////////////////
        /// \brief Setter of frequency
        ///
        /// \param f New frequency
        ///
        ////////////////////////////////////////////////////////////
        void setDropFrequency(float f){ drop_frequency=sf::seconds(f); }

        ////////////////////////////////////////////////////////////
        /// \brief Pickable creation
        ///
        /// Return a Pickable instance
        ///
        ////////////////////////////////////////////////////////////
        Pickable* createPickable(sf::Vector2f screen, sf::Vector2f pos, sf::Time t);

    protected:

    private:
        ////////////////////////////////////////////////////////////
        // Member data
        ////////////////////////////////////////////////////////////
        sf::Time drop_frequency;     ///Frequency of creation
        int lastId;                 ///Identifier of the last creation
        sf::Time lastTime;          ///Time of the last creation
};

#endif // PICKABLEFACTORY_H
