#ifndef PROJECTILE_H
#define PROJECTILE_H

////////////////////////////////////////////////////////////
// Headers
////////////////////////////////////////////////////////////
#include <Attack.h>

////////////////////////////////////////////////////////////
/// \brief Distance specific attack
///
////////////////////////////////////////////////////////////
class Projectile : public Attack
{
    public:
    	////////////////////////////////////////////////////////////
        /// \brief Constructor
        ///
        /// \param mvtSpeed Movement speed
        ///
        /// Create an \link Attack with movement speed
        ///
        ////////////////////////////////////////////////////////////
        Projectile(int id, const sf::IntRect box, int damage, float atqSpeed, sf::Vector2f mvtSpeed);

        ////////////////////////////////////////////////////////////
        /// \brief Destructor
        ///
        ////////////////////////////////////////////////////////////
        virtual ~Projectile();

        sf::Vector2f getMvtSpeed(){ return ms; }

        ////////////////////////////////////////////////////////////
        /// \brief Setter of the X component of projectile speed
        ///
        /// \param val New value
        ///
        ////////////////////////////////////////////////////////////
        void setMvtSpeedX(float val) { ms.x = val; }

        ////////////////////////////////////////////////////////////
        /// \brief Setter of the Y component of projectile speed
        ///
        /// \param val New value
        ///
        ////////////////////////////////////////////////////////////
        void setMvtSpeedY(float val) { ms.y = val; }

    protected:

    private:
    	////////////////////////////////////////////////////////////
        // Member data
        ////////////////////////////////////////////////////////////
        sf::Vector2f ms;	///Movement speed
};

#endif // PROJECTILE_H
